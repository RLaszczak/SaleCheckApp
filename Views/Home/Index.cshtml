@{
    ViewData["Title"] = "Porównywarka cen";
}

<!DOCTYPE html>

<head runat="server">
    <title>Porównywarka cen</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: black;
            color: white;
            margin: 0;
        }

        #container {
            display: flex;
            max-width: 800px;
            margin: 50px auto;
        }

        #categories {
            width: 20%;
            padding: 5px;
            background-color: white;
            border-radius: 5px;
            overflow-y: auto;
            text-align: center;
        }

        #queryAndResults {
            flex-grow: 1;
            padding: 10px;
            background-color: black;
            border-radius: 5px;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
        }

        #queryInput {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #555;
            border-radius: 5px;
            background-color: #444;
            color: orange;
        }

        #resultArea {
            width: 100%;
            padding: 10px;
            border: 1px solid #555;
            border-radius: 5px;
            background-color: #555;
        }

        #categoriesList {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }

        .categoryItem {
            padding: 8px;
            margin-bottom: 5px;
            background-color: #666;
            border-radius: 3px;
            cursor: pointer;
            color: white;
        }

            .categoryItem:hover {
                background-color: orange;
            }

        h3, h1 {
            color: orange;
            margin-bottom: 10px;
        }

        #compareButton {
            align-self: flex-end;
            margin-bottom: 10px;
            background-color: gray;
            color: white;
            padding: 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

            #compareButton:hover {
                background-color: orange;
            }

        #progressBar {
            width: 100%;
            margin-bottom: 10px;
        }
    </style>
</head>

<body>
    <form id="form1" runat="server">
        <div id="container">
            <div id="categories">
                <h3>Kategorie</h3>
                <ul id="categoriesList">
                    <li class="categoryItem" onclick="loadCategory(48)">1:48</li>
                    <li class="categoryItem" onclick="loadCategory(72)">1:72</li>
                    <li class="categoryItem" onclick="loadCategory(144)">1:144</li>
                    <li class="categoryItem" onclick="loadCategory(350)">1:350</li>
                    <li class="categoryItem" onclick="loadCategory(700)">1:700</li>
                </ul>
            </div>
            <div id="queryAndResults">
                <h1>Czego szukasz?</h1>
                <input type="text" id="queryInput" placeholder="Wpisz zapytanie do bazy danych..." />
                <button type="button" id="compareButton" onclick="submitQuery()">Wyszukaj w bazie</button>
                <!-- Pasek postępu -->
                <progress id="progressBar" value="0" max="100"></progress>
                <p id="searchInfo">Liczba przeszukanych produktów: <span id="searchCount">0</span></p>
                <div id="resultArea"></div>
            </div>
        </div>
    </form>
    <script>
        import fetch from 'cross-fetch';

        document.addEventListener("DOMContentLoaded", function () {
            // Wywołaj funkcję przy starcie strony
            // displayInitialProducts(); // Usunięte, ponieważ nie są już wyświetlane 15 pierwszych produktów
        });

        async function submitQuery() {
            var queryInput = document.getElementById("queryInput").value;

            // Ukryj listę kategorii
            document.getElementById("categoriesList").style.display = "none";

            // Aktualizuj informacje o działaniu przycisku
            var currentActionElement = document.getElementById("currentAction");
            if (currentActionElement) {
                currentActionElement.innerText = "Wyszukiwanie w bazie";
            }

            // Pokaż pasek postępu na początku zapytania
            updateProgressBar(0);

            try {
                // Wywołaj API, aby pobrać produkty na podstawie zapytania
                const response = await fetch(`/api/products?query=${encodeURIComponent(queryInput)}`);

                // Sprawdź, czy odpowiedź jest OK (status 200)
                if (response.ok) {
                    const data = await response.json();

                    // Zakończ pasek postępu po zakończeniu zapytania
                    updateProgressBar(100);

                    // Wyświetl informację o liczbie przeszukanych produktów
                    document.getElementById("searchCount").innerText = data.length;

                    // Zaktualizuj informacje o działaniu przycisku
                    if (currentActionElement) {
                        currentActionElement.innerText = "Wyszukiwanie zakończone";
                    }

                    // Tutaj możesz obsłużyć otrzymane dane, np. umieścić je w elemencie HTML
                    renderProducts(data);
                } else {
                    // Jeśli odpowiedź nie jest OK, wyświetl komunikat o błędzie
                    throw new Error('Błąd podczas pobierania danych: ' + response.statusText);
                }
            } catch (error) {
                console.error('Błąd podczas pobierania danych:', error);
                // Zaktualizuj informacje o działaniu przycisku w przypadku błędu
                if (currentActionElement) {
                    currentActionElement.innerText = "Błąd podczas wyszukiwania";
                }

                // Wyświetl komunikat o błędzie w resultArea
                document.getElementById("resultArea").innerHTML = '<p>Błąd z bazą.</p>';
            }
        }

        function renderProducts(products) {
            // Wyczyść resultArea przed dodaniem nowych danych
            document.getElementById("resultArea").innerHTML = '';

            // Jeśli nie ma wyników, wyświetl stosowną informację
            if (products.length === 0) {
                document.getElementById("resultArea").innerHTML = '<p>Brak wyników dla podanego zapytania.</p>';
                return;
            }

            // Tworzymy tabelę HTML do wyświetlenia informacji o produktach
            var tableHtml = '<table border="1"><tr><th>ID</th><th>Cena</th><th>Cena z Rabatem</th><th>Status</th><th>VAT</th><th>Nazwa</th><th>Waga</th><th>Cena bez Rabatu</th><th>Source</th></tr>';

            // Dodajemy wiersze do tabeli na podstawie danych o produktach
            products.forEach(product => {
                tableHtml += `<tr><td>${product.Id}</td><td>${product.Cena}</td><td>${product.CenaZRabatem}</td><td>${product.PrzetworzonyStatus}</td><td>${product.VAT}</td><td>${product.Nazwa}</td><td>${product.Waga}</td><td>${product.CenaBezRabatu}</td><td>${product.Source}</td></tr>`;
            });

            tableHtml += '</table>';

            // Wstawiamy tabelę HTML do resultArea
            document.getElementById("resultArea").innerHTML = tableHtml;
        }

        function updateProgressBar(value) {
            // Aktualizuj pasek postępu
            document.getElementById("progressBar").value = value;
        }

        function loadCategory(category) {
            document.getElementById("resultArea").innerHTML = "Wczytywanie produktów z kategorii " + category + "...";
        }
    </script>
</body>
